# Example of loops using DAGs
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: npb-with-mpi-
spec:
  entrypoint: npb-with-mpi
  podMetadata:
    annotations:
      slurm-job.knoc.io/mpi: "true"
  templates:
  - name: npb-with-mpi
    dag:
      tasks:
      - name: A
        template: npb
        arguments:
          parameters:
          - {name: cpus, value: 2}
      - name: B
        depends: "A"
        template: npb
        arguments:
          parameters:
          - {name: cpus, value: 4}
      - name: C
        depends: "B"
        template: npb
        arguments:
          parameters:
          - {name: cpus, value: 8}
      - name: D
        depends: "C"
        template: npb
        arguments:
          parameters:
          - {name: cpus, value: 16}
      # - name: get_results
      #   depends: "D"
      #   template: get_results
      #   arguments:
      #     parameters:
      #     - name: output
      #       value: "{{steps.generate.outputs.result}}"
  # - name: get_results
  #   inputs:
  #     parameters:
  #     - name: output
  #   container:
  #     image: alpine:latest
  #     command: [sh, -c]
  #     args: ["echo {{inputs.parameters.output}} | grep 'Time in seconds'"]
  - name: npb
    metadata:
      annotations:
        slurm-job.knoc.io/flags: "--mem=8G --nodes=3 --nodelist=tie0,tie1,tie3 --ntasks={{inputs.parameters.cpus}}"
        slurm-job.knoc.io/mpi-flags: "--mca btl self,tcp,vader --mca btl_tcp_if_include ib0 "
    inputs:
      parameters:
      - name: cpus
    container:
      image: malvag/mpi-npb:latest
      command: ["/work/NPB3.3-MPI/bin/ep.A.{{inputs.parameters.cpus}}"]
  nodeSelector:
    kubernetes.io/role: agent
    beta.kubernetes.io/os: linux
    type: virtual-kubelet
  tolerations:
  - key: virtual-kubelet.io/provider
    operator: Exists